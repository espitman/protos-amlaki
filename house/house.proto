syntax = "proto3";
package house;


message Images {
    repeated Image backdrops = 1;
    repeated Image posters = 2;
}

message Image {
    string file_path =1;
}

message House {
    // @inject_tag: json:"title",validate:"required"
    string title = 1;
    // @inject_tag: json:"bedroomsCount",validate:"number,min=0"
    int32 bedroomsCount = 2;
    // @inject_tag: json:"bathroomsCount",validate:"number,min=0"
    int32 bathroomsCount = 3;
    // @inject_tag: json:"garagesCount",validate:"number,min=0"
    int32 garagesCount = 4;
    // @inject_tag: json:"builtYear",validate:"number,min=0,required"
    int32 builtYear = 5;
    // @inject_tag: json:"areaSize",validate:"number,min=0"
    int32 areaSize = 6;
    // @inject_tag: json:"postalCode",validate:"number,min=0,required"
    string postalCode = 7;
    // @inject_tag: json:"floorsNo",validate:"number,min=0"
    int32 floorsNo = 8;
    // @inject_tag: json:"numberOfFloors",validate:"number,min=0,required"
    int32 numberOfFloors = 9;
    // @inject_tag: json:"facadeMaterial",validate:"number,min=0,required"
    string facadeMaterial = 10;
    // @inject_tag: json:"floorMaterial",validate:"alpha"
    string floorMaterial = 11;
    // @inject_tag: json:"cabinetMaterial",validate:"alpha"
    string cabinetMaterial = 12;
    // @inject_tag: json:"warehouseSize",validate:"alpha"
    string warehouseSize = 13;
    // @inject_tag: json:"buildingDirection",validate:"number,min=0"
    string buildingDirection = 14;
    // @inject_tag: json:"heatingSystem",validate:"alpha,oneof='n s'"
    string heatingSystem = 15;
    // @inject_tag: json:"coolingSystem",validate:"alpha"
    string coolingSystem = 16;
    // @inject_tag: json:"typeOfToilet",validate:"alpha"
    string typeOfToilet = 17;
}


message RequestDetails {
    // @inject_tag: json:"id",validate:"required"
    string id = 1;

    // @inject_tag: json:"full"
    bool full = 2;
}

message ResponseDetails {
    string id = 1;
    House house = 2;
}

message RequestCreate {
    // @inject_tag: json:"house",validate:"required"
    House house = 1;
}

service houseService {
    rpc Create(RequestCreate) returns (ResponseDetails) {}
}

