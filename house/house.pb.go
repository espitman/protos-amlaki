// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.1
// source: house/house.proto

package house

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Images struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Backdrops []*Image `protobuf:"bytes,1,rep,name=backdrops,proto3" json:"backdrops,omitempty"`
	Posters   []*Image `protobuf:"bytes,2,rep,name=posters,proto3" json:"posters,omitempty"`
}

func (x *Images) Reset() {
	*x = Images{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_house_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Images) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Images) ProtoMessage() {}

func (x *Images) ProtoReflect() protoreflect.Message {
	mi := &file_house_house_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Images.ProtoReflect.Descriptor instead.
func (*Images) Descriptor() ([]byte, []int) {
	return file_house_house_proto_rawDescGZIP(), []int{0}
}

func (x *Images) GetBackdrops() []*Image {
	if x != nil {
		return x.Backdrops
	}
	return nil
}

func (x *Images) GetPosters() []*Image {
	if x != nil {
		return x.Posters
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_house_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_house_house_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_house_house_proto_rawDescGZIP(), []int{1}
}

func (x *Image) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type House struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"title",validate:"required"
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title" validate:"required"`
	// @inject_tag: json:"saleType",validate:"alpha,oneof='sale' 'fullMortgage' 'mortgageAndRent',required"
	SaleType string `protobuf:"bytes,2,opt,name=saleType,proto3" json:"saleType" validate:"alpha,oneof='sale' 'fullMortgage' 'mortgageAndRent',required"`
	// @inject_tag: json:"description"
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description"`
	// @inject_tag: json:"address",validate:"required"
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address" validate:"required"`
	// @inject_tag: json:"location"
	Location *Location `protobuf:"bytes,5,opt,name=location,proto3" json:"location"`
	// @inject_tag: json:"districtNo"
	DistrictNo int32 `protobuf:"varint,6,opt,name=districtNo,proto3" json:"districtNo"`
	// @inject_tag: json:"bedroomsCount",validate:"number,min=0"
	BedroomsCount int32 `protobuf:"varint,7,opt,name=bedroomsCount,proto3" json:"bedroomsCount" validate:"number,min=0"`
	// @inject_tag: json:"bathroomsCount",validate:"number,min=0"
	BathroomsCount int32 `protobuf:"varint,8,opt,name=bathroomsCount,proto3" json:"bathroomsCount" validate:"number,min=0"`
	// @inject_tag: json:"garagesCount",validate:"number,min=0"
	GaragesCount int32 `protobuf:"varint,9,opt,name=garagesCount,proto3" json:"garagesCount" validate:"number,min=0"`
	// @inject_tag: json:"builtYear",validate:"number,min=0,required"
	BuiltYear int32 `protobuf:"varint,10,opt,name=builtYear,proto3" json:"builtYear" validate:"number,min=0,required"`
	// @inject_tag: json:"areaSize",validate:"number,min=0"
	AreaSize int32 `protobuf:"varint,11,opt,name=areaSize,proto3" json:"areaSize" validate:"number,min=0"`
	// @inject_tag: json:"postalCode",validate:"alphanum"
	PostalCode string `protobuf:"bytes,12,opt,name=postalCode,proto3" json:"postalCode" validate:"alphanum"`
	// @inject_tag: json:"floorsNo",validate:"number,min=0"
	FloorsNo int32 `protobuf:"varint,13,opt,name=floorsNo,proto3" json:"floorsNo" validate:"number,min=0"`
	// @inject_tag: json:"numberOfFloors",validate:"number,min=0,required"
	NumberOfFloors int32 `protobuf:"varint,14,opt,name=numberOfFloors,proto3" json:"numberOfFloors" validate:"number,min=0,required"`
	// @inject_tag: json:"facadeMaterial",validate:"alpha,oneof='granite' 'travertine' 'roman' 'cement' 'brick',required"
	FacadeMaterial string `protobuf:"bytes,15,opt,name=facadeMaterial,proto3" json:"facadeMaterial" validate:"alpha,oneof='granite' 'travertine' 'roman' 'cement' 'brick',required"`
	// @inject_tag: json:"floorMaterial",validate:"alpha,oneof='stone' 'ceramic' 'parquet' 'laminate' 'mosaic'"
	FloorMaterial string `protobuf:"bytes,16,opt,name=floorMaterial,proto3" json:"floorMaterial" validate:"alpha,oneof='stone' 'ceramic' 'parquet' 'laminate' 'mosaic'"`
	// @inject_tag: json:"cabinetMaterial",validate:"alpha,oneof='mdf' 'glass' 'memberan' 'metal' 'wooden'"
	CabinetMaterial string `protobuf:"bytes,17,opt,name=cabinetMaterial,proto3" json:"cabinetMaterial" validate:"alpha,oneof='mdf' 'glass' 'memberan' 'metal' 'wooden'"`
	// @inject_tag: json:"warehouseSize",validate:"number,min=0,required"
	WarehouseSize int32 `protobuf:"varint,18,opt,name=warehouseSize,proto3" json:"warehouseSize" validate:"number,min=0,required"`
	// @inject_tag: json:"buildingDirection",validate:"alpha,oneof='n' 's'"
	BuildingDirection string `protobuf:"bytes,19,opt,name=buildingDirection,proto3" json:"buildingDirection" validate:"alpha,oneof='n' 's'"`
	// @inject_tag: json:"heatingSystem",validate:"alpha,oneof='gasHeaters' 'oilHeater' 'radiator' 'package'"
	HeatingSystem string `protobuf:"bytes,20,opt,name=heatingSystem,proto3" json:"heatingSystem" validate:"alpha,oneof='gasHeaters' 'oilHeater' 'radiator' 'package'"`
	// @inject_tag: json:"coolingSystem",validate:"alpha,oneof='waterCooler' 'gasCooler' 'chiller' 'airConditioner' 'ceilingFan'"
	CoolingSystem string `protobuf:"bytes,21,opt,name=coolingSystem,proto3" json:"coolingSystem" validate:"alpha,oneof='waterCooler' 'gasCooler' 'chiller' 'airConditioner' 'ceilingFan'"`
	// @inject_tag: json:"typeOfToilet",validate:"alpha,oneof='irani' 'farangi' 'both'"
	TypeOfToilet string `protobuf:"bytes,22,opt,name=typeOfToilet,proto3" json:"typeOfToilet" validate:"alpha,oneof='irani' 'farangi' 'both'"`
	// @inject_tag: json:"amenities"
	Amenities *Amenities `protobuf:"bytes,23,opt,name=amenities,proto3" json:"amenities"`
	// @inject_tag: json:"price",validate:"required"
	Price *Price `protobuf:"bytes,24,opt,name=price,proto3" json:"price" validate:"required"`
}

func (x *House) Reset() {
	*x = House{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_house_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *House) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*House) ProtoMessage() {}

func (x *House) ProtoReflect() protoreflect.Message {
	mi := &file_house_house_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use House.ProtoReflect.Descriptor instead.
func (*House) Descriptor() ([]byte, []int) {
	return file_house_house_proto_rawDescGZIP(), []int{2}
}

func (x *House) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *House) GetSaleType() string {
	if x != nil {
		return x.SaleType
	}
	return ""
}

func (x *House) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *House) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *House) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *House) GetDistrictNo() int32 {
	if x != nil {
		return x.DistrictNo
	}
	return 0
}

func (x *House) GetBedroomsCount() int32 {
	if x != nil {
		return x.BedroomsCount
	}
	return 0
}

func (x *House) GetBathroomsCount() int32 {
	if x != nil {
		return x.BathroomsCount
	}
	return 0
}

func (x *House) GetGaragesCount() int32 {
	if x != nil {
		return x.GaragesCount
	}
	return 0
}

func (x *House) GetBuiltYear() int32 {
	if x != nil {
		return x.BuiltYear
	}
	return 0
}

func (x *House) GetAreaSize() int32 {
	if x != nil {
		return x.AreaSize
	}
	return 0
}

func (x *House) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *House) GetFloorsNo() int32 {
	if x != nil {
		return x.FloorsNo
	}
	return 0
}

func (x *House) GetNumberOfFloors() int32 {
	if x != nil {
		return x.NumberOfFloors
	}
	return 0
}

func (x *House) GetFacadeMaterial() string {
	if x != nil {
		return x.FacadeMaterial
	}
	return ""
}

func (x *House) GetFloorMaterial() string {
	if x != nil {
		return x.FloorMaterial
	}
	return ""
}

func (x *House) GetCabinetMaterial() string {
	if x != nil {
		return x.CabinetMaterial
	}
	return ""
}

func (x *House) GetWarehouseSize() int32 {
	if x != nil {
		return x.WarehouseSize
	}
	return 0
}

func (x *House) GetBuildingDirection() string {
	if x != nil {
		return x.BuildingDirection
	}
	return ""
}

func (x *House) GetHeatingSystem() string {
	if x != nil {
		return x.HeatingSystem
	}
	return ""
}

func (x *House) GetCoolingSystem() string {
	if x != nil {
		return x.CoolingSystem
	}
	return ""
}

func (x *House) GetTypeOfToilet() string {
	if x != nil {
		return x.TypeOfToilet
	}
	return ""
}

func (x *House) GetAmenities() *Amenities {
	if x != nil {
		return x.Amenities
	}
	return nil
}

func (x *House) GetPrice() *Price {
	if x != nil {
		return x.Price
	}
	return nil
}

type Amenities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"pool"
	Pool bool `protobuf:"varint,1,opt,name=pool,proto3" json:"pool"`
	// @inject_tag: json:"equippedKitchen"
	EquippedKitchen bool `protobuf:"varint,2,opt,name=equippedKitchen,proto3" json:"equippedKitchen"`
	// @inject_tag: json:"gym"
	Gym bool `protobuf:"varint,3,opt,name=gym,proto3" json:"gym"`
	// @inject_tag: json:"haundry"
	Haundry bool `protobuf:"varint,4,opt,name=haundry,proto3" json:"haundry"`
	// @inject_tag: json:"backYard"
	BackYard bool `protobuf:"varint,5,opt,name=backYard,proto3" json:"backYard"`
	// @inject_tag: json:"basketballCourt"
	BasketballCourt bool `protobuf:"varint,6,opt,name=basketballCourt,proto3" json:"basketballCourt"`
	// @inject_tag: json:"frontYard"
	FrontYard bool `protobuf:"varint,7,opt,name=frontYard,proto3" json:"frontYard"`
	// @inject_tag: json:"hotBath"
	HotBath bool `protobuf:"varint,8,opt,name=hotBath,proto3" json:"hotBath"`
	// @inject_tag: json:"centralAir"
	CentralAir bool `protobuf:"varint,9,opt,name=centralAir,proto3" json:"centralAir"`
	// @inject_tag: json:"electricity"
	Electricity bool `protobuf:"varint,10,opt,name=electricity,proto3" json:"electricity"`
	// @inject_tag: json:"heating"
	Heating bool `protobuf:"varint,11,opt,name=heating,proto3" json:"heating"`
	// @inject_tag: json:"naturalGas"
	NaturalGas bool `protobuf:"varint,12,opt,name=naturalGas,proto3" json:"naturalGas"`
	// @inject_tag: json:"ventilation"
	Ventilation bool `protobuf:"varint,13,opt,name=ventilation,proto3" json:"ventilation"`
	// @inject_tag: json:"water"
	Water bool `protobuf:"varint,14,opt,name=water,proto3" json:"water"`
	// @inject_tag: json:"chairAccessible"
	ChairAccessible bool `protobuf:"varint,15,opt,name=chairAccessible,proto3" json:"chairAccessible"`
	// @inject_tag: json:"elevator"
	Elevator bool `protobuf:"varint,16,opt,name=elevator,proto3" json:"elevator"`
	// @inject_tag: json:"fireplace"
	Fireplace bool `protobuf:"varint,17,opt,name=fireplace,proto3" json:"fireplace"`
	// @inject_tag: json:"smokeDetectors"
	SmokeDetectors bool `protobuf:"varint,18,opt,name=smokeDetectors,proto3" json:"smokeDetectors"`
	// @inject_tag: json:"washerAndDryer"
	WasherAndDryer bool `protobuf:"varint,19,opt,name=washerAndDryer,proto3" json:"washerAndDryer"`
	// @inject_tag: json:"wifi"
	Wifi bool `protobuf:"varint,20,opt,name=wifi,proto3" json:"wifi"`
	// @inject_tag: json:"mediaRoom"
	MediaRoom bool `protobuf:"varint,21,opt,name=mediaRoom,proto3" json:"mediaRoom"`
	// @inject_tag: json:"security"
	Security bool `protobuf:"varint,22,opt,name=security,proto3" json:"security"`
	// @inject_tag: json:"cctv"
	Cctv bool `protobuf:"varint,23,opt,name=cctv,proto3" json:"cctv"`
	// @inject_tag: json:"conferenceHall"
	ConferenceHall bool `protobuf:"varint,24,opt,name=conferenceHall,proto3" json:"conferenceHall"`
	// @inject_tag: json:"emergencyExit"
	EmergencyExit bool `protobuf:"varint,25,opt,name=emergencyExit,proto3" json:"emergencyExit"`
	// @inject_tag: json:"patio"
	Patio bool `protobuf:"varint,26,opt,name=patio,proto3" json:"patio"`
	// @inject_tag: json:"balcony"
	Balcony bool `protobuf:"varint,27,opt,name=balcony,proto3" json:"balcony"`
	// @inject_tag: json:"garbageDisposal"
	GarbageDisposal bool `protobuf:"varint,28,opt,name=garbageDisposal,proto3" json:"garbageDisposal"`
	// @inject_tag: json:"centralAntenna"
	CentralAntenna bool `protobuf:"varint,29,opt,name=centralAntenna,proto3" json:"centralAntenna"`
	// @inject_tag: json:"doubleGlazedWindow"
	DoubleGlazedWindow bool `protobuf:"varint,30,opt,name=doubleGlazedWindow,proto3" json:"doubleGlazedWindow"`
	// @inject_tag: json:"videoIphone"
	VideoIphone bool `protobuf:"varint,31,opt,name=videoIphone,proto3" json:"videoIphone"`
	// @inject_tag: json:"jacuzzi"
	Jacuzzi bool `protobuf:"varint,32,opt,name=jacuzzi,proto3" json:"jacuzzi"`
	// @inject_tag: json:"sauna"
	Sauna bool `protobuf:"varint,33,opt,name=sauna,proto3" json:"sauna"`
	// @inject_tag: json:"securityDoor"
	SecurityDoor bool `protobuf:"varint,34,opt,name=securityDoor,proto3" json:"securityDoor"`
	// @inject_tag: json:"wallCupboard"
	WallCupboard bool `protobuf:"varint,35,opt,name=wallCupboard,proto3" json:"wallCupboard"`
	// @inject_tag: json:"remoteDoor"
	RemoteDoor bool `protobuf:"varint,36,opt,name=remoteDoor,proto3" json:"remoteDoor"`
	// @inject_tag: json:"wallpaper"
	Wallpaper bool `protobuf:"varint,37,opt,name=wallpaper,proto3" json:"wallpaper"`
	// @inject_tag: json:"chiller"
	Chiller bool `protobuf:"varint,38,opt,name=chiller,proto3" json:"chiller"`
	// @inject_tag: json:"desktopGas"
	DesktopGas bool `protobuf:"varint,39,opt,name=desktopGas,proto3" json:"desktopGas"`
	// @inject_tag: json:"hood"
	Hood bool `protobuf:"varint,40,opt,name=hood,proto3" json:"hood"`
	// @inject_tag: json:"roofGarden"
	RoofGarden bool `protobuf:"varint,41,opt,name=roofGarden,proto3" json:"roofGarden"`
}

func (x *Amenities) Reset() {
	*x = Amenities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_house_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Amenities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Amenities) ProtoMessage() {}

func (x *Amenities) ProtoReflect() protoreflect.Message {
	mi := &file_house_house_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Amenities.ProtoReflect.Descriptor instead.
func (*Amenities) Descriptor() ([]byte, []int) {
	return file_house_house_proto_rawDescGZIP(), []int{3}
}

func (x *Amenities) GetPool() bool {
	if x != nil {
		return x.Pool
	}
	return false
}

func (x *Amenities) GetEquippedKitchen() bool {
	if x != nil {
		return x.EquippedKitchen
	}
	return false
}

func (x *Amenities) GetGym() bool {
	if x != nil {
		return x.Gym
	}
	return false
}

func (x *Amenities) GetHaundry() bool {
	if x != nil {
		return x.Haundry
	}
	return false
}

func (x *Amenities) GetBackYard() bool {
	if x != nil {
		return x.BackYard
	}
	return false
}

func (x *Amenities) GetBasketballCourt() bool {
	if x != nil {
		return x.BasketballCourt
	}
	return false
}

func (x *Amenities) GetFrontYard() bool {
	if x != nil {
		return x.FrontYard
	}
	return false
}

func (x *Amenities) GetHotBath() bool {
	if x != nil {
		return x.HotBath
	}
	return false
}

func (x *Amenities) GetCentralAir() bool {
	if x != nil {
		return x.CentralAir
	}
	return false
}

func (x *Amenities) GetElectricity() bool {
	if x != nil {
		return x.Electricity
	}
	return false
}

func (x *Amenities) GetHeating() bool {
	if x != nil {
		return x.Heating
	}
	return false
}

func (x *Amenities) GetNaturalGas() bool {
	if x != nil {
		return x.NaturalGas
	}
	return false
}

func (x *Amenities) GetVentilation() bool {
	if x != nil {
		return x.Ventilation
	}
	return false
}

func (x *Amenities) GetWater() bool {
	if x != nil {
		return x.Water
	}
	return false
}

func (x *Amenities) GetChairAccessible() bool {
	if x != nil {
		return x.ChairAccessible
	}
	return false
}

func (x *Amenities) GetElevator() bool {
	if x != nil {
		return x.Elevator
	}
	return false
}

func (x *Amenities) GetFireplace() bool {
	if x != nil {
		return x.Fireplace
	}
	return false
}

func (x *Amenities) GetSmokeDetectors() bool {
	if x != nil {
		return x.SmokeDetectors
	}
	return false
}

func (x *Amenities) GetWasherAndDryer() bool {
	if x != nil {
		return x.WasherAndDryer
	}
	return false
}

func (x *Amenities) GetWifi() bool {
	if x != nil {
		return x.Wifi
	}
	return false
}

func (x *Amenities) GetMediaRoom() bool {
	if x != nil {
		return x.MediaRoom
	}
	return false
}

func (x *Amenities) GetSecurity() bool {
	if x != nil {
		return x.Security
	}
	return false
}

func (x *Amenities) GetCctv() bool {
	if x != nil {
		return x.Cctv
	}
	return false
}

func (x *Amenities) GetConferenceHall() bool {
	if x != nil {
		return x.ConferenceHall
	}
	return false
}

func (x *Amenities) GetEmergencyExit() bool {
	if x != nil {
		return x.EmergencyExit
	}
	return false
}

func (x *Amenities) GetPatio() bool {
	if x != nil {
		return x.Patio
	}
	return false
}

func (x *Amenities) GetBalcony() bool {
	if x != nil {
		return x.Balcony
	}
	return false
}

func (x *Amenities) GetGarbageDisposal() bool {
	if x != nil {
		return x.GarbageDisposal
	}
	return false
}

func (x *Amenities) GetCentralAntenna() bool {
	if x != nil {
		return x.CentralAntenna
	}
	return false
}

func (x *Amenities) GetDoubleGlazedWindow() bool {
	if x != nil {
		return x.DoubleGlazedWindow
	}
	return false
}

func (x *Amenities) GetVideoIphone() bool {
	if x != nil {
		return x.VideoIphone
	}
	return false
}

func (x *Amenities) GetJacuzzi() bool {
	if x != nil {
		return x.Jacuzzi
	}
	return false
}

func (x *Amenities) GetSauna() bool {
	if x != nil {
		return x.Sauna
	}
	return false
}

func (x *Amenities) GetSecurityDoor() bool {
	if x != nil {
		return x.SecurityDoor
	}
	return false
}

func (x *Amenities) GetWallCupboard() bool {
	if x != nil {
		return x.WallCupboard
	}
	return false
}

func (x *Amenities) GetRemoteDoor() bool {
	if x != nil {
		return x.RemoteDoor
	}
	return false
}

func (x *Amenities) GetWallpaper() bool {
	if x != nil {
		return x.Wallpaper
	}
	return false
}

func (x *Amenities) GetChiller() bool {
	if x != nil {
		return x.Chiller
	}
	return false
}

func (x *Amenities) GetDesktopGas() bool {
	if x != nil {
		return x.DesktopGas
	}
	return false
}

func (x *Amenities) GetHood() bool {
	if x != nil {
		return x.Hood
	}
	return false
}

func (x *Amenities) GetRoofGarden() bool {
	if x != nil {
		return x.RoofGarden
	}
	return false
}

type Area struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"province",validate:"alphanum,required"
	Province string `protobuf:"bytes,1,opt,name=province,proto3" json:"province" validate:"alphanum,required"`
	// @inject_tag: json:"city",validate:"alphanum,required"
	City string `protobuf:"bytes,2,opt,name=city,proto3" json:"city" validate:"alphanum,required"`
	// @inject_tag: json:"neighborhood",validate:"alphanum,required"
	Neighborhood string `protobuf:"bytes,3,opt,name=neighborhood,proto3" json:"neighborhood" validate:"alphanum,required"`
}

func (x *Area) Reset() {
	*x = Area{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_house_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Area) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Area) ProtoMessage() {}

func (x *Area) ProtoReflect() protoreflect.Message {
	mi := &file_house_house_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Area.ProtoReflect.Descriptor instead.
func (*Area) Descriptor() ([]byte, []int) {
	return file_house_house_proto_rawDescGZIP(), []int{4}
}

func (x *Area) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *Area) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Area) GetNeighborhood() string {
	if x != nil {
		return x.Neighborhood
	}
	return ""
}

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"sale",validate:"number,min=0"
	Sale int32 `protobuf:"varint,1,opt,name=sale,proto3" json:"sale" validate:"number,min=0"`
	// @inject_tag: json:"mortgae",validate:"number,min=0"
	Mortgae int32 `protobuf:"varint,2,opt,name=mortgae,proto3" json:"mortgae" validate:"number,min=0"`
	// @inject_tag: json:"rent",validate:"number,min=0"
	Rent int32 `protobuf:"varint,3,opt,name=rent,proto3" json:"rent" validate:"number,min=0"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_house_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_house_house_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_house_house_proto_rawDescGZIP(), []int{5}
}

func (x *Price) GetSale() int32 {
	if x != nil {
		return x.Sale
	}
	return 0
}

func (x *Price) GetMortgae() int32 {
	if x != nil {
		return x.Mortgae
	}
	return 0
}

func (x *Price) GetRent() int32 {
	if x != nil {
		return x.Rent
	}
	return 0
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"latitude",validate:"latitude,required"
	Latitude float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude" validate:"latitude,required"`
	// @inject_tag: json:"longitude",validate:"longitude,required"
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude" validate:"longitude,required"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_house_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_house_house_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_house_house_proto_rawDescGZIP(), []int{6}
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type RequestDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id",validate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" validate:"required"`
	// @inject_tag: json:"full"
	Full bool `protobuf:"varint,2,opt,name=full,proto3" json:"full"`
}

func (x *RequestDetails) Reset() {
	*x = RequestDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_house_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDetails) ProtoMessage() {}

func (x *RequestDetails) ProtoReflect() protoreflect.Message {
	mi := &file_house_house_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDetails.ProtoReflect.Descriptor instead.
func (*RequestDetails) Descriptor() ([]byte, []int) {
	return file_house_house_proto_rawDescGZIP(), []int{7}
}

func (x *RequestDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestDetails) GetFull() bool {
	if x != nil {
		return x.Full
	}
	return false
}

type ResponseDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	House   *House `protobuf:"bytes,2,opt,name=house,proto3" json:"house,omitempty"`
	Area    *Area  `protobuf:"bytes,3,opt,name=area,proto3" json:"area,omitempty"`
	Status  string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Creator string `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *ResponseDetails) Reset() {
	*x = ResponseDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_house_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseDetails) ProtoMessage() {}

func (x *ResponseDetails) ProtoReflect() protoreflect.Message {
	mi := &file_house_house_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseDetails.ProtoReflect.Descriptor instead.
func (*ResponseDetails) Descriptor() ([]byte, []int) {
	return file_house_house_proto_rawDescGZIP(), []int{8}
}

func (x *ResponseDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResponseDetails) GetHouse() *House {
	if x != nil {
		return x.House
	}
	return nil
}

func (x *ResponseDetails) GetArea() *Area {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *ResponseDetails) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ResponseDetails) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type RequestCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"house",validate:"required"
	House *House `protobuf:"bytes,1,opt,name=house,proto3" json:"house" validate:"required"`
	// @inject_tag: json:"area",validate:"required"
	Area *Area `protobuf:"bytes,2,opt,name=area,proto3" json:"area" validate:"required"`
	// @inject_tag: json:"-"
	Creator string `protobuf:"bytes,3,opt,name=creator,proto3" json:"-"`
}

func (x *RequestCreate) Reset() {
	*x = RequestCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_house_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCreate) ProtoMessage() {}

func (x *RequestCreate) ProtoReflect() protoreflect.Message {
	mi := &file_house_house_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCreate.ProtoReflect.Descriptor instead.
func (*RequestCreate) Descriptor() ([]byte, []int) {
	return file_house_house_proto_rawDescGZIP(), []int{9}
}

func (x *RequestCreate) GetHouse() *House {
	if x != nil {
		return x.House
	}
	return nil
}

func (x *RequestCreate) GetArea() *Area {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *RequestCreate) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

var File_house_house_proto protoreflect.FileDescriptor

var file_house_house_proto_rawDesc = []byte{
	0x0a, 0x11, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x22, 0x5c, 0x0a, 0x06, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70, 0x73,
	0x12, 0x26, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x07, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x73, 0x22, 0x24, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0xe2,
	0x06, 0x0a, 0x05, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x61, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x61, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x4e,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x6f, 0x6d, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x61, 0x74,
	0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x62, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x59, 0x65,
	0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x59,
	0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x73, 0x4e, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x73, 0x4e, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x61, 0x63,
	0x61, 0x64, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x66,
	0x6c, 0x6f, 0x6f, 0x72, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x62, 0x69,
	0x6e, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x74,
	0x79, 0x70, 0x65, 0x4f, 0x66, 0x54, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x4f, 0x66, 0x54, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x12,
	0x2e, 0x0a, 0x09, 0x61, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x41, 0x6d, 0x65, 0x6e, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x09, 0x61, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x22, 0x83, 0x0a, 0x0a, 0x09, 0x41, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65,
	0x64, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x67, 0x79, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x67, 0x79,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x75, 0x6e, 0x64, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x75, 0x6e, 0x64, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x61, 0x63, 0x6b, 0x59, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62,
	0x61, 0x63, 0x6b, 0x59, 0x61, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x62, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x62, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x59, 0x61, 0x72, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x59, 0x61, 0x72, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x6e,
	0x74, 0x72, 0x61, 0x6c, 0x41, 0x69, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x41, 0x69, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x72, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x61, 0x6c,
	0x47, 0x61, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x61, 0x6c, 0x47, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x76, 0x65, 0x6e, 0x74,
	0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x61, 0x74, 0x65, 0x72,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x77, 0x61, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x0f, 0x63, 0x68, 0x61, 0x69, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x69, 0x72, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x76, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x76, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x69, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x6d, 0x6f, 0x6b, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x6d, 0x6f, 0x6b, 0x65,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x77, 0x61, 0x73,
	0x68, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x44, 0x72, 0x79, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x77, 0x61, 0x73, 0x68, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x44, 0x72, 0x79, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x77, 0x69, 0x66, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x6f,
	0x6f, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x52,
	0x6f, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x63, 0x74, 0x76, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63,
	0x63, 0x74, 0x76, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x48, 0x61, 0x6c, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x61, 0x6c, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x65,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x78, 0x69, 0x74, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x78, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x63, 0x6f,
	0x6e, 0x79, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x63, 0x6f, 0x6e,
	0x79, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x67, 0x61, 0x72, 0x62,
	0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x41, 0x6e, 0x74, 0x65,
	0x6e, 0x6e, 0x61, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x47, 0x6c, 0x61,
	0x7a, 0x65, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x47, 0x6c, 0x61, 0x7a, 0x65, 0x64, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x61, 0x63, 0x75, 0x7a, 0x7a, 0x69,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6a, 0x61, 0x63, 0x75, 0x7a, 0x7a, 0x69, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x61, 0x75, 0x6e, 0x61, 0x18, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x73, 0x61, 0x75, 0x6e, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x44, 0x6f, 0x6f, 0x72, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x6f, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x61, 0x6c,
	0x6c, 0x43, 0x75, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x77, 0x61, 0x6c, 0x6c, 0x43, 0x75, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x6f, 0x6f, 0x72, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x6f, 0x6f, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x77, 0x61, 0x6c, 0x6c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x25, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68,
	0x69, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70,
	0x47, 0x61, 0x73, 0x18, 0x27, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x6b, 0x74,
	0x6f, 0x70, 0x47, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x6f, 0x64, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x6f, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x6f, 0x6f,
	0x66, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x18, 0x29, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72,
	0x6f, 0x6f, 0x66, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x22, 0x5a, 0x0a, 0x04, 0x41, 0x72, 0x65,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x68, 0x6f, 0x6f,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x68, 0x6f, 0x6f, 0x64, 0x22, 0x49, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x61,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x72, 0x74, 0x67, 0x61, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x72, 0x74, 0x67, 0x61, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x65, 0x6e, 0x74,
	0x22, 0x44, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x6c, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66, 0x75, 0x6c, 0x6c, 0x22, 0x98, 0x01, 0x0a,
	0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x05, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52,
	0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x6e, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e,
	0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x32, 0x48, 0x0a, 0x0c, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_house_house_proto_rawDescOnce sync.Once
	file_house_house_proto_rawDescData = file_house_house_proto_rawDesc
)

func file_house_house_proto_rawDescGZIP() []byte {
	file_house_house_proto_rawDescOnce.Do(func() {
		file_house_house_proto_rawDescData = protoimpl.X.CompressGZIP(file_house_house_proto_rawDescData)
	})
	return file_house_house_proto_rawDescData
}

var file_house_house_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_house_house_proto_goTypes = []interface{}{
	(*Images)(nil),          // 0: house.Images
	(*Image)(nil),           // 1: house.Image
	(*House)(nil),           // 2: house.House
	(*Amenities)(nil),       // 3: house.Amenities
	(*Area)(nil),            // 4: house.Area
	(*Price)(nil),           // 5: house.Price
	(*Location)(nil),        // 6: house.Location
	(*RequestDetails)(nil),  // 7: house.RequestDetails
	(*ResponseDetails)(nil), // 8: house.ResponseDetails
	(*RequestCreate)(nil),   // 9: house.RequestCreate
}
var file_house_house_proto_depIdxs = []int32{
	1,  // 0: house.Images.backdrops:type_name -> house.Image
	1,  // 1: house.Images.posters:type_name -> house.Image
	6,  // 2: house.House.location:type_name -> house.Location
	3,  // 3: house.House.amenities:type_name -> house.Amenities
	5,  // 4: house.House.price:type_name -> house.Price
	2,  // 5: house.ResponseDetails.house:type_name -> house.House
	4,  // 6: house.ResponseDetails.area:type_name -> house.Area
	2,  // 7: house.RequestCreate.house:type_name -> house.House
	4,  // 8: house.RequestCreate.area:type_name -> house.Area
	9,  // 9: house.houseService.Create:input_type -> house.RequestCreate
	8,  // 10: house.houseService.Create:output_type -> house.ResponseDetails
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_house_house_proto_init() }
func file_house_house_proto_init() {
	if File_house_house_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_house_house_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Images); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_house_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_house_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*House); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_house_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Amenities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_house_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Area); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_house_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_house_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_house_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_house_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_house_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_house_house_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_house_house_proto_goTypes,
		DependencyIndexes: file_house_house_proto_depIdxs,
		MessageInfos:      file_house_house_proto_msgTypes,
	}.Build()
	File_house_house_proto = out.File
	file_house_house_proto_rawDesc = nil
	file_house_house_proto_goTypes = nil
	file_house_house_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HouseServiceClient is the client API for HouseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HouseServiceClient interface {
	Create(ctx context.Context, in *RequestCreate, opts ...grpc.CallOption) (*ResponseDetails, error)
}

type houseServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHouseServiceClient(cc grpc.ClientConnInterface) HouseServiceClient {
	return &houseServiceClient{cc}
}

func (c *houseServiceClient) Create(ctx context.Context, in *RequestCreate, opts ...grpc.CallOption) (*ResponseDetails, error) {
	out := new(ResponseDetails)
	err := c.cc.Invoke(ctx, "/house.houseService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HouseServiceServer is the server API for HouseService service.
type HouseServiceServer interface {
	Create(context.Context, *RequestCreate) (*ResponseDetails, error)
}

// UnimplementedHouseServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHouseServiceServer struct {
}

func (*UnimplementedHouseServiceServer) Create(context.Context, *RequestCreate) (*ResponseDetails, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}

func RegisterHouseServiceServer(s *grpc.Server, srv HouseServiceServer) {
	s.RegisterService(&_HouseService_serviceDesc, srv)
}

func _HouseService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HouseServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/house.houseService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HouseServiceServer).Create(ctx, req.(*RequestCreate))
	}
	return interceptor(ctx, in, info, handler)
}

var _HouseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "house.houseService",
	HandlerType: (*HouseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _HouseService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "house/house.proto",
}
